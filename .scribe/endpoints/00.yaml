name: Endpoints
description: ''
endpoints:
  -
    httpMethods:
      - POST
    uri: api/register
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Register a new user'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: '{YOUR_AUTH_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Must not be greater than 255 characters.'
        required: true
        example: vmqeopfuudtdsufvyvddq
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      email:
        name: email
        description: 'Must be a valid email address. Must not be greater than 255 characters.'
        required: true
        example: kunde.eloisa@example.com
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      password:
        name: password
        description: 'Must be at least 8 characters.'
        required: true
        example: '4[*UyPJ"}6'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      age:
        name: age
        description: 'Must be at least 18. Must not be greater than 100.'
        required: false
        example: 8
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      gender:
        name: gender
        description: ''
        required: false
        example: male
        type: string
        enumValues:
          - male
          - female
          - other
        exampleWasSpecified: false
        nullable: true
        custom: []
      religion:
        name: religion
        description: 'Must not be greater than 255 characters.'
        required: false
        example: dtqtqxbajwbpilpmufinl
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      caste:
        name: caste
        description: 'Must not be greater than 255 characters.'
        required: false
        example: lwloauydlsmsjuryvojcy
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      income:
        name: income
        description: 'Must be at least 0.'
        required: false
        example: 5
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      education:
        name: education
        description: 'Must not be greater than 255 characters.'
        required: false
        example: zvrbyickznkygloigmkwx
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      location:
        name: location
        description: 'Must not be greater than 255 characters.'
        required: false
        example: phlvazjrcnfbaqywuxhgj
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      occupation:
        name: occupation
        description: 'Must not be greater than 255 characters.'
        required: false
        example: jmzuxjubqouzswiwxtrki
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      bio:
        name: bio
        description: 'Must not be greater than 1000 characters.'
        required: false
        example: mfcatbxspzmrazsroyjpx
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      name: vmqeopfuudtdsufvyvddq
      email: kunde.eloisa@example.com
      password: '4[*UyPJ"}6'
      age: 8
      gender: male
      religion: dtqtqxbajwbpilpmufinl
      caste: lwloauydlsmsjuryvojcy
      income: 5
      education: zvrbyickznkygloigmkwx
      location: phlvazjrcnfbaqywuxhgj
      occupation: jmzuxjubqouzswiwxtrki
      bio: mfcatbxspzmrazsroyjpx
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer {YOUR_AUTH_TOKEN}'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/login
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Login user'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: '{YOUR_AUTH_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      email:
        name: email
        description: 'Must be a valid email address.'
        required: true
        example: qkunze@example.com
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      password:
        name: password
        description: ''
        required: true
        example: 'O[2UZ5ij-e/dl4m{o,'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      email: qkunze@example.com
      password: 'O[2UZ5ij-e/dl4m{o,'
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer {YOUR_AUTH_TOKEN}'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/logout
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Logout user'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: '{YOUR_AUTH_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer {YOUR_AUTH_TOKEN}'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/user
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get authenticated user'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: '{YOUR_AUTH_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer {YOUR_AUTH_TOKEN}'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/profile
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get user profile'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: '{YOUR_AUTH_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer {YOUR_AUTH_TOKEN}'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: api/profile
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update user profile'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: '{YOUR_AUTH_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Must not be greater than 255 characters.'
        required: false
        example: vmqeopfuudtdsufvyvddq
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      age:
        name: age
        description: 'Must be at least 18. Must not be greater than 100.'
        required: false
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      gender:
        name: gender
        description: ''
        required: false
        example: male
        type: string
        enumValues:
          - male
          - female
          - other
        exampleWasSpecified: false
        nullable: false
        custom: []
      religion:
        name: religion
        description: 'Must not be greater than 255 characters.'
        required: false
        example: mniihfqcoynlazghdtqtq
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      caste:
        name: caste
        description: 'Must not be greater than 255 characters.'
        required: false
        example: xbajwbpilpmufinllwloa
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      income:
        name: income
        description: 'Must be at least 0.'
        required: false
        example: 72
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      education:
        name: education
        description: 'Must not be greater than 255 characters.'
        required: false
        example: ydlsmsjuryvojcybzvrby
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      location:
        name: location
        description: 'Must not be greater than 255 characters.'
        required: false
        example: ickznkygloigmkwxphlva
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      occupation:
        name: occupation
        description: 'Must not be greater than 255 characters.'
        required: false
        example: zjrcnfbaqywuxhgjjmzux
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      bio:
        name: bio
        description: 'Must not be greater than 1000 characters.'
        required: false
        example: jubqouzswiwxtrkimfcat
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      profile_picture:
        name: profile_picture
        description: 'Must not be greater than 255 characters.'
        required: false
        example: bxspzmrazsroyjpxmqese
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      name: vmqeopfuudtdsufvyvddq
      age: 1
      gender: male
      religion: mniihfqcoynlazghdtqtq
      caste: xbajwbpilpmufinllwloa
      income: 72
      education: ydlsmsjuryvojcybzvrby
      location: ickznkygloigmkwxphlva
      occupation: zjrcnfbaqywuxhgjjmzux
      bio: jubqouzswiwxtrkimfcat
      profile_picture: bxspzmrazsroyjpxmqese
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer {YOUR_AUTH_TOKEN}'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/profile/preferences
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update user preferences'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: '{YOUR_AUTH_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      preferred_age_min:
        name: preferred_age_min
        description: 'Must be at least 18. Must not be greater than 100.'
        required: false
        example: 21
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      preferred_age_max:
        name: preferred_age_max
        description: 'Must be at least 18. Must not be greater than 100.'
        required: false
        example: 13
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      preferred_gender:
        name: preferred_gender
        description: ''
        required: false
        example: male
        type: string
        enumValues:
          - male
          - female
          - other
        exampleWasSpecified: false
        nullable: false
        custom: []
      preferred_religion:
        name: preferred_religion
        description: 'Must not be greater than 255 characters.'
        required: false
        example: qeopfuudtdsufvyvddqam
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      preferred_caste:
        name: preferred_caste
        description: 'Must not be greater than 255 characters.'
        required: false
        example: niihfqcoynlazghdtqtqx
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      preferred_income_min:
        name: preferred_income_min
        description: 'Must be at least 0.'
        required: false
        example: 6
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      preferred_income_max:
        name: preferred_income_max
        description: 'Must be at least 0.'
        required: false
        example: 0
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      preferred_education:
        name: preferred_education
        description: 'Must not be greater than 255 characters.'
        required: false
        example: jwbpilpmufinllwloauyd
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      preferred_location:
        name: preferred_location
        description: 'Must not be greater than 255 characters.'
        required: false
        example: lsmsjuryvojcybzvrbyic
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      preferred_occupation:
        name: preferred_occupation
        description: 'Must not be greater than 255 characters.'
        required: false
        example: kznkygloigmkwxphlvazj
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      age_weight:
        name: age_weight
        description: 'Must be at least 0. Must not be greater than 10.'
        required: false
        example: 7
        type: number
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      gender_weight:
        name: gender_weight
        description: 'Must be at least 0. Must not be greater than 10.'
        required: false
        example: 1
        type: number
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      religion_weight:
        name: religion_weight
        description: 'Must be at least 0. Must not be greater than 10.'
        required: false
        example: 6
        type: number
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      caste_weight:
        name: caste_weight
        description: 'Must be at least 0. Must not be greater than 10.'
        required: false
        example: 3
        type: number
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      income_weight:
        name: income_weight
        description: 'Must be at least 0. Must not be greater than 10.'
        required: false
        example: 1
        type: number
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      education_weight:
        name: education_weight
        description: 'Must be at least 0. Must not be greater than 10.'
        required: false
        example: 1
        type: number
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      location_weight:
        name: location_weight
        description: 'Must be at least 0. Must not be greater than 10.'
        required: false
        example: 7
        type: number
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      occupation_weight:
        name: occupation_weight
        description: 'Must be at least 0. Must not be greater than 10.'
        required: false
        example: 10
        type: number
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      preferred_age_min: 21
      preferred_age_max: 13
      preferred_gender: male
      preferred_religion: qeopfuudtdsufvyvddqam
      preferred_caste: niihfqcoynlazghdtqtqx
      preferred_income_min: 6
      preferred_income_max: 0
      preferred_education: jwbpilpmufinllwloauyd
      preferred_location: lsmsjuryvojcybzvrbyic
      preferred_occupation: kznkygloigmkwxphlvazj
      age_weight: 7
      gender_weight: 1
      religion_weight: 6
      caste_weight: 3
      income_weight: 1
      education_weight: 1
      location_weight: 7
      occupation_weight: 10
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer {YOUR_AUTH_TOKEN}'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/recommendations
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get recommendations for the authenticated user'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: '{YOUR_AUTH_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      limit:
        name: limit
        description: 'Must be at least 1. Must not be greater than 50.'
        required: false
        example: 21
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      limit: 21
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer {YOUR_AUTH_TOKEN}'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/matches/{user_id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Create a match with another user'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: '{YOUR_AUTH_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      user_id:
        name: user_id
        description: 'The ID of the user.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      user_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer {YOUR_AUTH_TOKEN}'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/matches
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get all matches for the authenticated user'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: '{YOUR_AUTH_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer {YOUR_AUTH_TOKEN}'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/matches/{user_id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Remove a match with another user'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: '{YOUR_AUTH_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      user_id:
        name: user_id
        description: 'The ID of the user.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      user_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer {YOUR_AUTH_TOKEN}'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/likes/{user_id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Like a user'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: '{YOUR_AUTH_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      user_id:
        name: user_id
        description: 'The ID of the user.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      user_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer {YOUR_AUTH_TOKEN}'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/likes/{user_id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Unlike a user'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: '{YOUR_AUTH_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      user_id:
        name: user_id
        description: 'The ID of the user.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      user_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer {YOUR_AUTH_TOKEN}'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/likes
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get all likes for the authenticated user'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: '{YOUR_AUTH_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer {YOUR_AUTH_TOKEN}'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/messages/send
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Send a message to a matched user'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: '{YOUR_AUTH_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      to_user_id:
        name: to_user_id
        description: 'The <code>id</code> of an existing record in the users table.'
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      message:
        name: message
        description: 'Must not be greater than 1000 characters.'
        required: true
        example: mqeopfuudtdsufvyvddqa
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      to_user_id: consequatur
      message: mqeopfuudtdsufvyvddqa
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer {YOUR_AUTH_TOKEN}'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/messages/{user_id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get chat history with a specific user'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: '{YOUR_AUTH_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      user_id:
        name: user_id
        description: 'The ID of the user.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      user_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer {YOUR_AUTH_TOKEN}'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/messages
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get all conversations for the authenticated user'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: '{YOUR_AUTH_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer {YOUR_AUTH_TOKEN}'
    controller: null
    method: null
    route: null
    custom: []
